{
  "name": "svelte-blank-20221125",
  "description": "",
  "version": "0.0.1",
  "scripts": {
    "DISABLEDprebuild": "test \"$CI\" = true && npx pnpm install -r --store=node_modules/.pnpm-store || echo skipping pnpm install",
    "DISABLEDpreinstall": "npx only-allow pnpm",
    "postinstall":                                   "echo RUN postinstall && svelte-kit sync && ts-node-esm scripts/assets-clean.ts",
    "postinstallEMPTY":                              "echo RUN postinstall && svelte-kit sync",
    "svelte:prebuild":                               "echo RUN svelte:prebuild && rimraf .svelte-kit && rimraf build && svelte-kit sync && ts-node-esm scripts/assets-copy.ts",
    "svelte:predev":                                 "echo RUN svelte:predev   && rimraf dev-dist                    && svelte-kit sync && ts-node-esm scripts/assets-copy.ts",
    "dev":                                           " echo RUN dev(:http)                                    && pnpm svelte:predev     && cross-env SW_DEV=true DEBUG=vite-plugin-pwa:* NO_HTTPS=1 vite dev --port 3000",
    "dev:http":                                      " pnpm dev",
    "dev:https":                                     " echo RUN dev:https                                     && pnpm svelte:predev     && cross-env SW_DEV=true DEBUG=vite-plugin-pwa:* vite dev --port 3000 --https",
    "dev-claims":                                    " echo RUN dev-claims                                    && pnpm svelte:predev     && cross-env SW_DEV=true DEBUG=vite-plugin-pwa:* SW=true                 CLAIMS=true vite dev --port 3000",
    "dev-destroy":                                   " echo RUN dev-destroy                                   && pnpm svelte:predev     && cross-env SW_DEV=true DEBUG=vite-plugin-pwa:*         SW_DESTROY=true             vite dev --port 3000",
    "dev-claims-destroy":                            " echo RUN dev-claims-destroy                            && pnpm svelte:predev     && cross-env SW_DEV=true DEBUG=vite-plugin-pwa:* SW=true SW_DESTROY=true CLAIMS=true vite dev --port 3000",
    "build":                                         "echo RUN build                                          && pnpm build:base && cap sync android && cap sync ios",
    "build:base":                                    "echo RUN build:base                                     && pnpm svelte:prebuild   && vite build",
    "build:netlify":                                 "echo RUN build:netlify                                  && cross-env NETLIFY=true pnpm build:only-sw",
    "build:vercel":                                  "echo RUN build:vercel                                   && cross-env VERCEL=true  pnpm build:only-sw",
    "build:only":                                    "echo RUN build:only                                     && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*                                                     pnpm build:base",
    "build:only-reloadsw":                           "echo RUN build:only-reloadsw                            && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*                                     RELOAD_SW=true  pnpm build:base",
    "build:only-claims":                             "echo RUN build:only-claims                              && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*                         CLAIMS=true                 pnpm build:base",
    "build:only-reloadsw-claims":                    "echo RUN build:only-reloadsw-claims                     && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*                         CLAIMS=true RELOAD_SW=true  pnpm build:base",
    "build:only-destroy":                            "echo RUN build:only-destroy                             && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*         SW_DESTROY=true                             pnpm build:base",
    "build:only-reloadsw-destroy":                   "echo RUN build:only-reloadsw-destroy                    && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*         SW_DESTROY=true             RELOAD_SW=true  pnpm build:base",
    "build:only-claims-destroy":                     "echo RUN build:only-claims-destroy                      && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*         SW_DESTROY=true CLAIMS=true                 pnpm build:base",
    "build:only-reloadsw-claims-destroy":            "echo RUN build:only-reloadsw-claims-destroy             && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:*         SW_DESTROY=true CLAIMS=true RELOAD_SW=true  pnpm build:base",
    "build:only-sw":                                 "echo RUN build:only-sw                                  && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true                                             pnpm build:base",
    "build:only-sw-reloadsw":                        "echo RUN build:only-sw-reloadsw                         && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true                             RELOAD_SW=true  pnpm build:base",
    "build:only-sw-claims":                          "echo RUN build:only-sw-claims                           && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true                 CLAIMS=true                 pnpm build:base",
    "build:only-sw-claims-reloadsw":                 "echo RUN build:only-sw-claims-reloadsw                  && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true                 CLAIMS=true RELOAD_SW=true  pnpm build:base",
    "build:only-sw-destroy":                         "echo RUN build:only-sw-destroy                          && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true SW_DESTROY=true                             pnpm build:base",
    "build:only-sw-reloadsw-destroy":                "echo RUN build:only-sw-reloadsw-destroy                 && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true SW_DESTROY=true             RELOAD_SW=true  pnpm build:base",
    "build:only-sw-claims-destroy":                  "echo RUN build:only-sw-claims-destroy                   && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true SW_DESTROY=true CLAIMS=true                 pnpm build:base",
    "build:only-sw-reloadsw-claims-destroy":         "echo RUN build:only-sw-reloadsw-claims-destroy          && cross-env BASE_URL=/ SOURCE_MAP=true DEBUG=vite-plugin-pwa:* SW=true SW_DESTROY=true CLAIMS=true RELOAD_SW=true  pnpm build:base",
    "build:only:all":                                "echo RUN build:only:all                                 && pnpm build:only && pnpm build:only-reloadsw && pnpm build:only-claims && pnpm build:only-reloadsw-claims && pnpm build:only-destroy && pnpm build:only-reloadsw-destroy && pnpm build:only-claims-destroy && pnpm build:only-reloadsw-claims-destroy && pnpm build:only-sw && pnpm build:only-sw-reloadsw && pnpm build:only-sw-claims && pnpm build:only-sw-claims-reloadsw && pnpm build:only-sw-destroy && pnpm build:only-sw-reloadsw-destroy && pnpm build:only-sw-claims-destroy && pnpm build:only-sw-reloadsw-claims-destroy",
    "preview":                                       " echo RUN preview(:https)                               &&  vite preview --port 4173",
    "preview:https":                                 " pnpm preview",
    "preview:http":                                  " echo RUN preview:http                                  &&  cross-env NO_HTTPS=1 vite preview --port 4173",
    "prepare":                                       "echo RUN prepare EMPTY",
    "tauri:dev":                                     " echo RUN tauri:dev                                     &&  tauri dev",
    "tauri:build":                                   "echo RUN tauri:build                                    && tauri build",
    "tauri":                                         "echo RUN tauri                                          && tauri",
    "test":                                          "echo RUN test                                           && cross-env NO_HTTPS=1 playwright test",
    "test:debug":                                    "echo RUN test:debug                                     && cross-env NO_HTTPS=1 playwright test --headed --timeout=0",
    "check":                                         "echo RUN check                                          && svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
    "check:watch":                                   " echo RUN check:watch                                   &&  svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
    "test:unit":                                     "echo RUN test:unit                                      && vitest run",
    "test:unit:watch":                               "echo RUN test:unit:watch                                && vitest",
    "test:unit:coverage":                            "echo RUN test:unit:coverage                             && vitest run --coverage",
    "lint": "prettier --plugin-search-dir . --check . && eslint .",
    "lint:css": "stylelint \"src/**/*.{css,html,svelte}\"",
    "format": "echo RUN format && pnpm lint:css --fix && prettier --plugin-search-dir . --write .",
    "storybook": " echo RUN storybook(:dev) && cross-env NODE_OPTIONS=--openssl-legacy-provider storybook dev -p 6006",
    "storybook:dev": " pnpm storybook",
    "storybook:build": "echo RUN storybook:build && cross-env NODE_OPTIONS=--openssl-legacy-provider storybook build",
    "android:open": "cap open android",
    "android:dev": "cap run android",
    "all": "pnpm i && pnpm format && pnpm lint && pnpm tauri info && pnpm build:only-sw && pnpm tauri:build && pnpm storybook:build && pnpm test:unit && pnpm test && pnpm check",
    "chromatic": "npx chromatic --build-script-name=storybook:build",
    "icons:build": "bash -c \"./scripts/icon-generator.sh .logo/logo.svg .logo/icon.svg .logo/icon_bg.svg .logo/icon+texture.svg \""
  },
  "dependencies": {
    "@capacitor/android": "^4.5.0",
    "@capacitor/core": "^4.5.0",
    "@capacitor/geolocation": "^4.1.0",
    "@capacitor/ios": "^4.5.0",
    "@fontsource/fira-mono": "^4.5.10",
    "@ionic/pwa-elements": "^3.1.1",
    "agnostic-svelte": "^1.1.27",
    "qr-scanner": "^1.4.2"
  },
  "devDependencies": {
    "@babel/core": "^7.20.2",
    "@capacitor/cli": "^4.5.0",
    "@mdx-js/react": "^2.1.5",
    "@neoconfetti/svelte": "^1.0.0",
    "@playwright/test": "^1.28.1",
    "@rollup/plugin-replace": "^5.0.1",
    "@ronilaukkarinen/stylelint-a11y": "^1.2.4",
    "@storybook/addon-a11y": "7.0.0-beta.17",
    "@storybook/addon-actions": "7.0.0-beta.17",
    "@storybook/addon-backgrounds": "7.0.0-beta.17",
    "@storybook/addon-controls": "7.0.0-beta.17",
    "@storybook/addon-docs": "7.0.0-beta.17",
    "@storybook/addon-essentials": "7.0.0-beta.17",
    "@storybook/addon-interactions": "7.0.0-beta.17",
    "@storybook/addon-links": "7.0.0-beta.17",
    "@storybook/addon-measure": "7.0.0-beta.17",
    "@storybook/addon-outline": "7.0.0-beta.17",
    "@storybook/addon-svelte-csf": "^2.0.10",
    "@storybook/addons": "7.0.0-beta.17",
    "@storybook/api": "7.0.0-beta.17",
    "@storybook/builder-webpack5": "7.0.0-beta.17",
    "@storybook/channel-postmessage": "7.0.0-beta.17",
    "@storybook/channel-websocket": "7.0.0-beta.17",
    "@storybook/client-api": "7.0.0-beta.17",
    "@storybook/client-logger": "7.0.0-beta.17",
    "@storybook/components": "7.0.0-beta.17",
    "@storybook/core-common": "7.0.0-beta.17",
    "@storybook/core-events": "7.0.0-beta.17",
    "@storybook/node-logger": "7.0.0-beta.17",
    "@storybook/preview-web": "7.0.0-beta.17",
    "@storybook/svelte": "7.0.0-beta.17",
    "@storybook/sveltekit": "7.0.0-beta.17",
    "@storybook/testing-library": "^0.0.13",
    "@storybook/theming": "7.0.0-beta.17",
    "@sveltejs/adapter-auto": "^1.0.0",
    "@sveltejs/adapter-netlify": "^1.0.0",
    "@sveltejs/adapter-static": "^1.0.0",
    "@sveltejs/adapter-vercel": "^1.0.0",
    "@sveltejs/kit": "^1.0.0",
    "@tauri-apps/api": "^1.2.0",
    "@tauri-apps/cli": "^1.2.1",
    "@types/cookie": "^0.5.1",
    "@types/glob": "^8.0.0",
    "@types/minimist": "^1.2.2",
    "@types/node": "^18.11.9",
    "@types/object-hash": "^3.0.1",
    "@types/react": "17.0.0",
    "@types/workbox-build": "^5.0.1",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vite-pwa/sveltekit": "^0.1.0",
    "@vitejs/plugin-basic-ssl": "^1.0.1",
    "@vitest/coverage-c8": "^0.25.3",
    "autoprefixer": "^10.4.13",
    "babel-loader": "^8.3.0",
    "chromatic": "^6.11.4",
    "cpy": "^9.0.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.28.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-storybook": "^0.6.8",
    "eslint-plugin-svelte3": "^4.0.0",
    "glob": "^8.0.3",
    "minimist": "^1.2.7",
    "object-hash": "^3.0.0",
    "pnpm": "^7.4.1",
    "postcss": "^8.4.19",
    "postcss-cli": "^10.0.0",
    "postcss-html": "^1.5.0",
    "postcss-import": "^15.0.0",
    "postcss-nesting": "^10.2.0",
    "prettier": "^2.8.0",
    "prettier-plugin-svelte": "^2.8.1",
    "react": "17.0.0",
    "react-dom": "17.0.0",
    "rimraf": "^3.0.2",
    "sass": "^1.56.1",
    "shx": "^0.3.4",
    "storybook": "7.0.0-beta.17",
    "storybook-addon-themes": "^6.1.0",
    "stylelint": "^14.15.0",
    "stylelint-config-html": "^1.1.0",
    "stylelint-config-prettier": "^9.0.4",
    "stylelint-config-recommended": "^9.0.0",
    "stylelint-config-standard": "^29.0.0",
    "svelte": "^3.55.0",
    "svelte-check": "^3.0.1",
    "svgo": "^3.0.2",
    "ts-node": "^10.9.1",
    "tslib": "^2.4.1",
    "typescript": "^4.9.3",
    "vanilla-lazyload": "^17.8.3",
    "vite": "^4.0.3",
    "vite-plugin-pwa": "^0.14.0",
    "vite-plugin-static-copy": "^0.13.0",
    "vitest": "^0.26.2",
    "webpack": "^5.73.0",
    "workbox-build": "^6.5.4",
    "workbox-cacheable-response": "^6.5.4",
    "workbox-core": "^6.5.4",
    "workbox-expiration": "^6.5.4",
    "workbox-precaching": "^6.5.4",
    "workbox-routing": "^6.5.4",
    "workbox-strategies": "^6.5.4",
    "workbox-window": "^6.5.4"
  },
  "packageManager": "pnpm@7.1.9",
  "engines": {
    "npm": ">=7.0.0",
    "pnpm": ">=7.1.9",
    "node": ">=18.0.0"
  },
  "type": "module",
  "readme": "README.md",
  "_id": "svelte-blank-20221125@0.0.1",
  "pnpm": {
    "patchedDependencies": {
      "eslint-plugin-svelte3@4.0.0": "patches/eslint-plugin-svelte3@4.0.0.patch"
    }
  }
}
