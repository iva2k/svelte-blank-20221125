diff --git a/src/exports/vite/index.js b/src/exports/vite/index.js
index 179104d8c19b44b432f414f61ed506beb8d65faa..37249d2e3342e367e6c0d0347406f3f0bca4fe6d 100644
--- a/src/exports/vite/index.js
+++ b/src/exports/vite/index.js
@@ -449,6 +449,14 @@ function kit() {
 						new URL('../../core/prerender/prerender.js', import.meta.url)
 					);
 
+					// [iva2k] pnpm adds a ton of environmental variables "npm_..." and fork() chokes with "spawn ENAMETOOLONG" error.
+					// Removing all "npm_*" variables solves the issue:
+					const env_filtered = Object.keys(env.private).filter(key => !/^npm_/.test(key)).reduce((acc, key) => {
+					  acc[key] = env.private[key];
+					  return acc;
+					}, { });
+					// console.log('DEBUG [spawn ENAMETOOLONG error] len(env.private+public)=%o, len(filtered)=%o, filtered=%o', JSON.stringify({ ...env.private, ...env.public }).length, JSON.stringify({ ...env_filtered, ...env.public }).length, env_filtered);
+					// console.log('DEBUG [spawn ENAMETOOLONG error] len(env.private+public)=%o, len(filtered)=%o', JSON.stringify({ ...env.private, ...env.public }).length, JSON.stringify({ ...env_filtered, ...env.public }).length);
 					const child = fork(
 						script,
 						[
@@ -456,7 +464,8 @@ function kit() {
 							manifest_path,
 							results_path,
 							'' + verbose,
-							JSON.stringify({ ...env.private, ...env.public })
+							// JSON.stringify({ ...env.private, ...env.public })
+							JSON.stringify({ ...env_filtered, ...env.public })
 						],
 						{
 							stdio: 'inherit'